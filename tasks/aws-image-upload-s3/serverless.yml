service: LambdaTeam

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-central-1
  memorySize: 128
  timeout: 10
  versionFunctions: false
  environment:
    AWS_COGNITO_CLIENT_ID: 38ccodrt0knar0soc0kqubf16u
    AWS_COGNITO_USER_POOL_ID: eu-central-1_DjiIEiXUE
    AWS_S3_BUCKET_NAME: lambda-team-s3-images
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:DeleteObject
            - s3:ListBucket
          Resource:
            - arn:aws:s3:::${self:provider.environment.AWS_S3_BUCKET_NAME}*

functions:
  authRegister:
    handler: src/handlers/auth/register.handler
    events:
      - http:
          method: POST
          path: /register
          request:
            schemas:
              application/json: ${file(schemas/auth/register.json)}
  authLogin:
    handler: src/handlers/auth/login.handler
    events:
      - http:
          method: POST
          path: /login
          request:
            schemas:
              application/json: ${file(schemas/auth/login.json)}
  authAutoVerify:
    handler: src/handlers/auth/auto-verify.handler
  authorizer:
    handler: src/handlers/auth/authorizer.handler
  create:
    handler: src/handlers/image/create.handler
    events:
      - http:
          method: POST
          path: /image
          authorizer: ${self:custom.authorizer}
  list:
    handler: src/handlers/image/list.handler
    events:
      - http:
          method: GET
          path: /image
          authorizer: ${self:custom.authorizer}
  delete:
    handler: src/handlers/image/delete.handler
    events:
      - http:
          method: DELETE
          path: /image/{id}
          authorizer: ${self:custom.authorizer}

plugins:
  - serverless-plugin-typescript

custom:
  authorizer:
    name: authorizer
    managedExternally: false
    resultTtlInSeconds: 0
    identitySource: method.request.header.Authorization
    identityValidationExpression: Bearer.*
